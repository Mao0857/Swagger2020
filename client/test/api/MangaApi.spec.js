/*
 * SwaggerでマンガAPIを遊ぶ
 * マンガのためのAPI
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swaggerapi);
  }
}(this, function(expect, Swaggerapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swaggerapi.MangaApi();
  });

  describe('(package)', function() {
    describe('MangaApi', function() {
      describe('getMangaById', function() {
        it('should call getMangaById successfully', function(done) {
          // TODO: uncomment, update parameter values for getMangaById call and complete the assertions
          /*
          var id = 789;

          instance.getMangaById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Swaggerapi.Manga);
            expect(data.id).to.be.a('number');
            expect(data.id).to.be(1);
            expect(data.name).to.be.a('string');
            expect(data.name).to.be("クレッフィーの大冒険！");
            expect(data.releaseDate).to.be.a(Date);
            expect(data.releaseDate).to.be(2020-12-01 00:00:00.000);
            {
              let dataCtr = data.chapters;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Swaggerapi.Chapter);
                expect(data.id).to.be.a('number');
                expect(data.id).to.be(1);
                expect(data.name).to.be.a('string');
                expect(data.name).to.be("威張れ！クレッフィー！");
                {
                  let dataCtr = data.pages;
                  expect(dataCtr).to.be.an(Array);
                  expect(dataCtr).to.not.be.empty();
                  for (let p in dataCtr) {
                    let data = dataCtr[p];
                    expect(data).to.be.a('string');
                    expect(data).to.be("");
                  }
                }

                      }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getMangas', function() {
        it('should call getMangas successfully', function(done) {
          // TODO: uncomment getMangas call and complete the assertions
          /*

          instance.getMangas(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(Swaggerapi.Manga);
              expect(data.id).to.be.a('number');
              expect(data.id).to.be(1);
              expect(data.name).to.be.a('string');
              expect(data.name).to.be("クレッフィーの大冒険！");
              expect(data.releaseDate).to.be.a(Date);
              expect(data.releaseDate).to.be(2020-12-01 00:00:00.000);
              {
                let dataCtr = data.chapters;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a(Swaggerapi.Chapter);
                  expect(data.id).to.be.a('number');
                  expect(data.id).to.be(1);
                  expect(data.name).to.be.a('string');
                  expect(data.name).to.be("威張れ！クレッフィー！");
                  {
                    let dataCtr = data.pages;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a('string');
                      expect(data).to.be("");
                    }
                  }
  
                        }
              }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
